plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

android {
    namespace 'com.ramprasad.charviewer'
    compileSdk 33

    defaultConfig {
        applicationId "com.ramprasad.charviewer"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "BASE_URL", "\"https://api.duckduckgo.com/\""
    }

    flavorDimensions "version"
    productFlavors {
        SimpsonsCharacterViewer {
            dimension 'version'
            manifestPlaceholders = [appLabel: "The Simpsons Character Viewer",
                                    appTheme: "@style/Theme.SimpsonTheme"]
            applicationId 'com.ramprasad.simpsonsviewer'
            buildConfigField "String", "SEARCH_CHARACTER", "\"?q=simpsons+characters&format=json\""
            buildConfigField "String", "FRAGMENT_NAME", "\"Simpson's\""
            versionCode 1
            versionName "1.0"
        }
        WireCharacterViewer {
            dimension 'version'
            manifestPlaceholders = [appLabel: "The Wire Character Viewer",
                                    appTheme: "@style/Theme.WireViewer"]
            applicationId 'com.ramprasad.wireviewer'
            buildConfigField "String", "SEARCH_CHARACTER", "\"?q=wire+characters&format=json\""
            buildConfigField "String", "FRAGMENT_NAME", "\"The Wire\""
            versionCode 1
            versionName "1.0"
        }

    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        buildConfig true
        viewBinding true
    }

    kotlinOptions {
        jvmTarget = '17'
    }
    sourceSets {
        SimpsonsCharacterViewer {
            res {
                srcDirs 'src/SimpsonsCharacterViewer/res'
            }
            java {
                srcDirs 'src/SimpsonsCharacterViewer/java'
            }
        }
        WireCharacterViewer {
            res {
                srcDirs 'src/WireCharacterViewer/res'
            }
            java {
                srcDirs 'src/WireCharacterViewer/java'
            }
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {

/*    constraints {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
        }
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }*/

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.6.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.6.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation 'com.github.bumptech.glide:glide:4.15.1'
    kapt 'com.github.bumptech.glide:compiler:4.15.0'


    /** Networking **/
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.3'
    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.3"
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation "com.squareup.retrofit2:converter-moshi:2.9.0"
    implementation 'com.squareup.moshi:moshi-kotlin:1.12.0'
    implementation 'com.jayway.jsonpath:json-path:2.4.0'


    /** Coroutines **/
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.1"
    // Test coroutines
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.1'

    /** ViewModel and LiveData */
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.6.1"
    // kapt "androidx.lifecycle:lifecycle-compiler:2.6.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.6.1"

    /** Hilt **/
    implementation "com.google.dagger:hilt-android:2.46.1"
    kapt "com.google.dagger:hilt-compiler:2.46.1"
    implementation("androidx.hilt:hilt-navigation-fragment:1.0.0")


    // To get ViewModels() reference in Activity
    implementation 'androidx.activity:activity-ktx:1.7.2'
    // To get ViewModels() reference in Fragment
    implementation "androidx.fragment:fragment:1.6.0"

    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'

    // coil for image
    implementation "io.coil-kt:coil-compose:2.4.0"

    //mock webserver
    testImplementation "com.squareup.okhttp3:mockwebserver:5.0.0-alpha.11"

    // Instant taskRule
    implementation 'androidx.arch.core:core-testing:2.2.0'

    //Mockito
    testImplementation 'org.mockito:mockito-core:5.3.1'
    androidTestImplementation 'org.mockito:mockito-android:3.5.13'
    testImplementation 'io.mockk:mockk:1.13.5'
    testImplementation "org.mockito.kotlin:mockito-kotlin:5.0.0"





}